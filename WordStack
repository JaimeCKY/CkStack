public class WordStack {
    private String[] stackArray;
    private int top; // Index of the top element
    private static final int DEFAULT_CAPACITY = 10;

    public WordStack() {
        this(DEFAULT_CAPACITY);
    }

    public WordStack(int capacity) {
        stackArray = new String[capacity];
        top = -1; // Initialize top to -1 (empty stack)
    }

    public void push(String word) {
        if (top == stackArray.length - 1) {
            System.out.println("Stack is full. Cannot push " + word);
            return;
        }
        stackArray[++top] = word;
    }

    public String pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot pop.");
            return null;
        }
        return stackArray[top--];
    }

    public String peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot peek.");
            return null;
        }
        return stackArray[top];
    }

    public boolean isEmpty() {
        return top == -1;
    }

    public int size() {
        return top + 1;
    }

    public static void main(String[] args) {
        WordStack stack = new WordStack(5);
        stack.push("Java");
        stack.push("is");
        stack.push("fun!");

        System.out.println("Top word: " + stack.peek()); // Should print "fun!"

        while (!stack.isEmpty()) {
            System.out.println("Popped: " + stack.pop());
        }
    }
}
